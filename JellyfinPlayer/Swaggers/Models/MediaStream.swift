//
// MediaStream.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Class MediaStream. */

public struct MediaStream: Codable {

    /** Gets or sets the codec. */
    public var codec: String?
    /** Gets or sets the codec tag. */
    public var codecTag: String?
    /** Gets or sets the language. */
    public var language: String?
    /** Gets or sets the color range. */
    public var colorRange: String?
    /** Gets or sets the color space. */
    public var colorSpace: String?
    /** Gets or sets the color transfer. */
    public var colorTransfer: String?
    /** Gets or sets the color primaries. */
    public var colorPrimaries: String?
    /** Gets or sets the comment. */
    public var comment: String?
    /** Gets or sets the time base. */
    public var timeBase: String?
    /** Gets or sets the codec time base. */
    public var codecTimeBase: String?
    /** Gets or sets the title. */
    public var title: String?
    /** Gets or sets the video range. */
    public var videoRange: String?
    public var localizedUndefined: String?
    public var localizedDefault: String?
    public var localizedForced: String?
    public var displayTitle: String?
    public var nalLengthSize: String?
    /** Gets or sets a value indicating whether this instance is interlaced. */
    public var isInterlaced: Bool?
    public var isAVC: Bool?
    /** Gets or sets the channel layout. */
    public var channelLayout: String?
    /** Gets or sets the bit rate. */
    public var bitRate: Int?
    /** Gets or sets the bit depth. */
    public var bitDepth: Int?
    /** Gets or sets the reference frames. */
    public var refFrames: Int?
    /** Gets or sets the length of the packet. */
    public var packetLength: Int?
    /** Gets or sets the channels. */
    public var channels: Int?
    /** Gets or sets the sample rate. */
    public var sampleRate: Int?
    /** Gets or sets a value indicating whether this instance is default. */
    public var isDefault: Bool?
    /** Gets or sets a value indicating whether this instance is forced. */
    public var isForced: Bool?
    /** Gets or sets the height. */
    public var height: Int?
    /** Gets or sets the width. */
    public var width: Int?
    /** Gets or sets the average frame rate. */
    public var averageFrameRate: Float?
    /** Gets or sets the real frame rate. */
    public var realFrameRate: Float?
    /** Gets or sets the profile. */
    public var profile: String?
    /** Gets or sets the type. */
    public var type: AllOfMediaStreamModelType?
    /** Gets or sets the aspect ratio. */
    public var aspectRatio: String?
    /** Gets or sets the index. */
    public var index: Int?
    /** Gets or sets the score. */
    public var score: Int?
    /** Gets or sets a value indicating whether this instance is external. */
    public var isExternal: Bool?
    /** Gets or sets the method. */
    public var deliveryMethod: AllOfMediaStreamDeliveryMethod?
    /** Gets or sets the delivery URL. */
    public var deliveryUrl: String?
    /** Gets or sets a value indicating whether this instance is external URL. */
    public var isExternalUrl: Bool?
    public var isTextSubtitleStream: Bool?
    /** Gets or sets a value indicating whether [supports external stream]. */
    public var supportsExternalStream: Bool?
    /** Gets or sets the filename. */
    public var path: String?
    /** Gets or sets the pixel format. */
    public var pixelFormat: String?
    /** Gets or sets the level. */
    public var level: Double?
    /** Gets a value indicating whether this instance is anamorphic. */
    public var isAnamorphic: Bool?

    public init(codec: String? = nil, codecTag: String? = nil, language: String? = nil, colorRange: String? = nil, colorSpace: String? = nil, colorTransfer: String? = nil, colorPrimaries: String? = nil, comment: String? = nil, timeBase: String? = nil, codecTimeBase: String? = nil, title: String? = nil, videoRange: String? = nil, localizedUndefined: String? = nil, localizedDefault: String? = nil, localizedForced: String? = nil, displayTitle: String? = nil, nalLengthSize: String? = nil, isInterlaced: Bool? = nil, isAVC: Bool? = nil, channelLayout: String? = nil, bitRate: Int? = nil, bitDepth: Int? = nil, refFrames: Int? = nil, packetLength: Int? = nil, channels: Int? = nil, sampleRate: Int? = nil, isDefault: Bool? = nil, isForced: Bool? = nil, height: Int? = nil, width: Int? = nil, averageFrameRate: Float? = nil, realFrameRate: Float? = nil, profile: String? = nil, type: AllOfMediaStreamModelType? = nil, aspectRatio: String? = nil, index: Int? = nil, score: Int? = nil, isExternal: Bool? = nil, deliveryMethod: AllOfMediaStreamDeliveryMethod? = nil, deliveryUrl: String? = nil, isExternalUrl: Bool? = nil, isTextSubtitleStream: Bool? = nil, supportsExternalStream: Bool? = nil, path: String? = nil, pixelFormat: String? = nil, level: Double? = nil, isAnamorphic: Bool? = nil) {
        self.codec = codec
        self.codecTag = codecTag
        self.language = language
        self.colorRange = colorRange
        self.colorSpace = colorSpace
        self.colorTransfer = colorTransfer
        self.colorPrimaries = colorPrimaries
        self.comment = comment
        self.timeBase = timeBase
        self.codecTimeBase = codecTimeBase
        self.title = title
        self.videoRange = videoRange
        self.localizedUndefined = localizedUndefined
        self.localizedDefault = localizedDefault
        self.localizedForced = localizedForced
        self.displayTitle = displayTitle
        self.nalLengthSize = nalLengthSize
        self.isInterlaced = isInterlaced
        self.isAVC = isAVC
        self.channelLayout = channelLayout
        self.bitRate = bitRate
        self.bitDepth = bitDepth
        self.refFrames = refFrames
        self.packetLength = packetLength
        self.channels = channels
        self.sampleRate = sampleRate
        self.isDefault = isDefault
        self.isForced = isForced
        self.height = height
        self.width = width
        self.averageFrameRate = averageFrameRate
        self.realFrameRate = realFrameRate
        self.profile = profile
        self.type = type
        self.aspectRatio = aspectRatio
        self.index = index
        self.score = score
        self.isExternal = isExternal
        self.deliveryMethod = deliveryMethod
        self.deliveryUrl = deliveryUrl
        self.isExternalUrl = isExternalUrl
        self.isTextSubtitleStream = isTextSubtitleStream
        self.supportsExternalStream = supportsExternalStream
        self.path = path
        self.pixelFormat = pixelFormat
        self.level = level
        self.isAnamorphic = isAnamorphic
    }

    public enum CodingKeys: String, CodingKey { 
        case codec = "Codec"
        case codecTag = "CodecTag"
        case language = "Language"
        case colorRange = "ColorRange"
        case colorSpace = "ColorSpace"
        case colorTransfer = "ColorTransfer"
        case colorPrimaries = "ColorPrimaries"
        case comment = "Comment"
        case timeBase = "TimeBase"
        case codecTimeBase = "CodecTimeBase"
        case title = "Title"
        case videoRange = "VideoRange"
        case localizedUndefined
        case localizedDefault
        case localizedForced
        case displayTitle = "DisplayTitle"
        case nalLengthSize = "NalLengthSize"
        case isInterlaced = "IsInterlaced"
        case isAVC = "IsAVC"
        case channelLayout = "ChannelLayout"
        case bitRate = "BitRate"
        case bitDepth = "BitDepth"
        case refFrames = "RefFrames"
        case packetLength = "PacketLength"
        case channels = "Channels"
        case sampleRate = "SampleRate"
        case isDefault = "IsDefault"
        case isForced = "IsForced"
        case height = "Height"
        case width = "Width"
        case averageFrameRate = "AverageFrameRate"
        case realFrameRate = "RealFrameRate"
        case profile = "Profile"
        case type = "Type"
        case aspectRatio = "AspectRatio"
        case index = "Index"
        case score = "Score"
        case isExternal = "IsExternal"
        case deliveryMethod = "DeliveryMethod"
        case deliveryUrl = "DeliveryUrl"
        case isExternalUrl = "IsExternalUrl"
        case isTextSubtitleStream = "IsTextSubtitleStream"
        case supportsExternalStream = "SupportsExternalStream"
        case path = "Path"
        case pixelFormat = "PixelFormat"
        case level = "Level"
        case isAnamorphic = "IsAnamorphic"
    }

}
