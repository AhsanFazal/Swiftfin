//
// SystemAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SystemAPI {
    /**
     Gets information about the request endpoint.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEndpointInfo(completion: @escaping ((_ data: EndPointInfo?,_ error: Error?) -> Void)) {
        getEndpointInfoWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets information about the request endpoint.
     - GET /System/Endpoint
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - examples: [{contentType=application/json, example={
  "IsLocal" : true,
  "IsInNetwork" : true
}}]

     - returns: RequestBuilder<EndPointInfo> 
     */
    open class func getEndpointInfoWithRequestBuilder() -> RequestBuilder<EndPointInfo> {
        let path = "/System/Endpoint"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EndPointInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a log file.

     - parameter name: (query) The name of the log file to get. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getLogFile(name: String, completion: @escaping ((_ data: Data?,_ error: Error?) -> Void)) {
        getLogFileWithRequestBuilder(name: name).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a log file.
     - GET /System/Logs/Log
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - examples: [{contentType=application/json, example=""}]
     - parameter name: (query) The name of the log file to get. 

     - returns: RequestBuilder<Data> 
     */
    open class func getLogFileWithRequestBuilder(name: String) -> RequestBuilder<Data> {
        let path = "/System/Logs/Log"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "name": name
        ])


        let requestBuilder: RequestBuilder<Data>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Pings the system.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPingSystem(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getPingSystemWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Pings the system.
     - GET /System/Ping
     - 

     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func getPingSystemWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/System/Ping"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets public information about the server.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPublicSystemInfo(completion: @escaping ((_ data: PublicSystemInfo?,_ error: Error?) -> Void)) {
        getPublicSystemInfoWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets public information about the server.
     - GET /System/Info/Public
     - 

     - examples: [{contentType=application/json, example={
  "OperatingSystem" : "OperatingSystem",
  "LocalAddress" : "LocalAddress",
  "ProductName" : "ProductName",
  "Version" : "Version",
  "ServerName" : "ServerName",
  "Id" : "Id",
  "StartupWizardCompleted" : true
}}]

     - returns: RequestBuilder<PublicSystemInfo> 
     */
    open class func getPublicSystemInfoWithRequestBuilder() -> RequestBuilder<PublicSystemInfo> {
        let path = "/System/Info/Public"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<PublicSystemInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets a list of available server log files.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServerLogs(completion: @escaping ((_ data: [LogFile]?,_ error: Error?) -> Void)) {
        getServerLogsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets a list of available server log files.
     - GET /System/Logs
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - examples: [{contentType=application/json, example=[ {
  "Size" : 0,
  "DateCreated" : "2000-01-23T04:56:07.000+00:00",
  "DateModified" : "2000-01-23T04:56:07.000+00:00",
  "Name" : "Name"
}, {
  "Size" : 0,
  "DateCreated" : "2000-01-23T04:56:07.000+00:00",
  "DateModified" : "2000-01-23T04:56:07.000+00:00",
  "Name" : "Name"
} ]}]

     - returns: RequestBuilder<[LogFile]> 
     */
    open class func getServerLogsWithRequestBuilder() -> RequestBuilder<[LogFile]> {
        let path = "/System/Logs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[LogFile]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets information about the server.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSystemInfo(completion: @escaping ((_ data: SystemInfo?,_ error: Error?) -> Void)) {
        getSystemInfoWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets information about the server.
     - GET /System/Info
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - examples: [{contentType=application/json, example={
  "OperatingSystem" : "OperatingSystem",
  "ProductName" : "ProductName",
  "EncoderLocation" : "",
  "PackageName" : "PackageName",
  "TranscodingTempPath" : "TranscodingTempPath",
  "CanSelfRestart" : true,
  "StartupWizardCompleted" : true,
  "Version" : "Version",
  "CachePath" : "CachePath",
  "HasPendingRestart" : true,
  "ProgramDataPath" : "ProgramDataPath",
  "WebPath" : "WebPath",
  "SupportsLibraryMonitor" : true,
  "LocalAddress" : "LocalAddress",
  "CanLaunchWebBrowser" : true,
  "IsShuttingDown" : true,
  "SystemArchitecture" : "",
  "ItemsByNamePath" : "ItemsByNamePath",
  "WebSocketPortNumber" : 0,
  "CompletedInstallations" : [ {
    "SourceUrl" : "SourceUrl",
    "Version" : "",
    "Checksum" : "Checksum",
    "PackageInfo" : "",
    "Guid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "Changelog" : "Changelog",
    "Name" : "Name"
  }, {
    "SourceUrl" : "SourceUrl",
    "Version" : "",
    "Checksum" : "Checksum",
    "PackageInfo" : "",
    "Guid" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "Changelog" : "Changelog",
    "Name" : "Name"
  } ],
  "OperatingSystemDisplayName" : "OperatingSystemDisplayName",
  "InternalMetadataPath" : "InternalMetadataPath",
  "ServerName" : "ServerName",
  "Id" : "Id",
  "HasUpdateAvailable" : true,
  "LogPath" : "LogPath"
}}]

     - returns: RequestBuilder<SystemInfo> 
     */
    open class func getSystemInfoWithRequestBuilder() -> RequestBuilder<SystemInfo> {
        let path = "/System/Info"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SystemInfo>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets wake on lan information.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getWakeOnLanInfo(completion: @escaping ((_ data: [WakeOnLanInfo]?,_ error: Error?) -> Void)) {
        getWakeOnLanInfoWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets wake on lan information.
     - GET /System/WakeOnLanInfo
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - examples: [{contentType=application/json, example=[ {
  "Port" : 0,
  "MacAddress" : "MacAddress"
}, {
  "Port" : 0,
  "MacAddress" : "MacAddress"
} ]}]

     - returns: RequestBuilder<[WakeOnLanInfo]> 
     */
    open class func getWakeOnLanInfoWithRequestBuilder() -> RequestBuilder<[WakeOnLanInfo]> {
        let path = "/System/WakeOnLanInfo"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[WakeOnLanInfo]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Pings the system.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postPingSystem(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        postPingSystemWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Pings the system.
     - POST /System/Ping
     - 

     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func postPingSystemWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/System/Ping"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Restarts the application.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func restartApplication(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        restartApplicationWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Restarts the application.
     - POST /System/Restart
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication

     - returns: RequestBuilder<Void> 
     */
    open class func restartApplicationWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/System/Restart"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Shuts down the application.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func shutdownApplication(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        shutdownApplicationWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Shuts down the application.
     - POST /System/Shutdown
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication

     - returns: RequestBuilder<Void> 
     */
    open class func shutdownApplicationWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/System/Shutdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
