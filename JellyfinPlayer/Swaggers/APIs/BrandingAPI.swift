//
// BrandingAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class BrandingAPI {
    /**
     Gets branding css.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getBrandingCss(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getBrandingCssWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets branding css.
     - GET /Branding/Css
     - 

     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func getBrandingCssWithRequestBuilder() -> RequestBuilder<String> {
        let path = "/Branding/Css"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets branding css.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getBrandingCss2(completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        getBrandingCss2WithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets branding css.
     - GET /Branding/Css.css
     - 

     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<String> 
     */
    open class func getBrandingCss2WithRequestBuilder() -> RequestBuilder<String> {
        let path = "/Branding/Css.css"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Gets branding configuration.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getBrandingOptions(completion: @escaping ((_ data: BrandingOptions?,_ error: Error?) -> Void)) {
        getBrandingOptionsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets branding configuration.
     - GET /Branding/Configuration
     - 

     - examples: [{contentType=application/json, example={
  "CustomCss" : "CustomCss",
  "LoginDisclaimer" : "LoginDisclaimer"
}}]

     - returns: RequestBuilder<BrandingOptions> 
     */
    open class func getBrandingOptionsWithRequestBuilder() -> RequestBuilder<BrandingOptions> {
        let path = "/Branding/Configuration"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<BrandingOptions>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
