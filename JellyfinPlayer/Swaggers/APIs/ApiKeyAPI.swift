//
// ApiKeyAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ApiKeyAPI {
    /**
     Create a new api key.

     - parameter app: (query) Name of the app using the authentication key. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func createKey(app: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        createKeyWithRequestBuilder(app: app).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create a new api key.
     - POST /Auth/Keys
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - parameter app: (query) Name of the app using the authentication key. 

     - returns: RequestBuilder<Void> 
     */
    open class func createKeyWithRequestBuilder(app: String) -> RequestBuilder<Void> {
        let path = "/Auth/Keys"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "app": app
        ])


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Get all keys.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getKeys(completion: @escaping ((_ data: AuthenticationInfoQueryResult?,_ error: Error?) -> Void)) {
        getKeysWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get all keys.
     - GET /Auth/Keys
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - examples: [{contentType=application/json, example={
  "TotalRecordCount" : 6,
  "StartIndex" : 1,
  "Items" : [ {
    "AppVersion" : "AppVersion",
    "UserName" : "UserName",
    "AccessToken" : "AccessToken",
    "DeviceId" : "DeviceId",
    "UserId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "IsActive" : true,
    "DateRevoked" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "Id" : 0,
    "DateLastActivity" : "2000-01-23T04:56:07.000+00:00",
    "AppName" : "AppName",
    "DeviceName" : "DeviceName"
  }, {
    "AppVersion" : "AppVersion",
    "UserName" : "UserName",
    "AccessToken" : "AccessToken",
    "DeviceId" : "DeviceId",
    "UserId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "IsActive" : true,
    "DateRevoked" : "2000-01-23T04:56:07.000+00:00",
    "DateCreated" : "2000-01-23T04:56:07.000+00:00",
    "Id" : 0,
    "DateLastActivity" : "2000-01-23T04:56:07.000+00:00",
    "AppName" : "AppName",
    "DeviceName" : "DeviceName"
  } ]
}}]

     - returns: RequestBuilder<AuthenticationInfoQueryResult> 
     */
    open class func getKeysWithRequestBuilder() -> RequestBuilder<AuthenticationInfoQueryResult> {
        let path = "/Auth/Keys"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthenticationInfoQueryResult>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**
     Remove an api key.

     - parameter key: (path) The access token to delete. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func revokeKey(key: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        revokeKeyWithRequestBuilder(key: key).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Remove an api key.
     - DELETE /Auth/Keys/{key}
     - 

     - API Key:
       - type: apiKey X-Emby-Authorization 
       - name: CustomAuthentication
     - parameter key: (path) The access token to delete. 

     - returns: RequestBuilder<Void> 
     */
    open class func revokeKeyWithRequestBuilder(key: String) -> RequestBuilder<Void> {
        var path = "/Auth/Keys/{key}"
        let keyPreEscape = "\(key)"
        let keyPostEscape = keyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{key}", with: keyPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
